version: "3.8"

services:
  mysql:
    image: mysql:8.4.5
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: laravel
      MYSQL_USER: laravel
      MYSQL_PASSWORD: laravel
    volumes:
      - mysql-data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - laravel
    deploy:
      placement:
        constraints: [node.role == manager]

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - laravel
    deploy:
      placement:
        constraints: [node.role == manager]

  minio:
    image: minio/minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - laravel
    deploy:
      placement:
        constraints: [node.role == manager]

  laravel-app:
    image: fallahpour/laravel-app:latest
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - mysql
      - redis
      - minio
    networks:
      - laravel
    environment:
      APP_ENV: production
      APP_KEY: base64:syeLUZ2ZJjrCfZkYx2DPRMAEm660p2uoJRGlsa0iX+M=
      FILESYSTEM_DISK: s3
      AWS_ACCESS_KEY_ID: minio
      AWS_SECRET_ACCESS_KEY: minio123
      AWS_DEFAULT_REGION: us-east-1
      AWS_BUCKET: laravel-bucket
      AWS_ENDPOINT: http://minio:9000
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.role == manager]

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./laravel-app:/var/www
    depends_on:
      - laravel-app
    networks:
      - laravel
    deploy:
      placement:
        constraints: [node.role == manager]

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - laravel
    deploy:
      placement:
        constraints: [node.role == manager]

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - laravel
    deploy:
      placement:
        constraints: [node.role == manager]

  portainer:
    image: portainer/portainer-ce
    command: -H unix:///var/run/docker.sock
    ports:
      - "9002:9000"  # تغییر برای جلوگیری از تداخل با MinIO
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - laravel
    deploy:
      placement:
        constraints: [node.role == manager]

volumes:
  mysql-data:
  portainer_data:
  minio_data:

networks:
  laravel:
    driver: overlay
