version: "3.8"

services:
  mysql:
    image: mysql:8.4.5
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: laravel
      MYSQL_USER: laravel
      MYSQL_PASSWORD: laravel
    volumes:
      - mysql-data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - laravel
    deploy:
      placement:
        constraints: [node.role == manager]

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - laravel
    deploy:
      placement:
        constraints: [node.role == manager]

  laravel-app:
    image: laravel-app-image:latest
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./laravel-app:/var/www
    depends_on:
      - mysql
      - redis
    networks:
      - laravel
    deploy:
      placement:
        constraints: [node.role == manager]

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./laravel-app:/var/www
    depends_on:
      - laravel-app
    networks:
      - laravel
    deploy:
      placement:
        constraints: [node.role == manager]

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - laravel
    deploy:
      placement:
        constraints: [node.role == manager]

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - laravel
    deploy:
      placement:
        constraints: [node.role == manager]

  portainer:
    image: portainer/portainer-ce
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    ports:
      - "9000:9000"
    networks:
      - laravel
    deploy:
      placement:
        constraints: [node.role == manager]

volumes:
  mysql-data:
  portainer_data:

networks:
  laravel:
    external: false
    driver: overlay

